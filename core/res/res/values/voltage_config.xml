<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2024 VoltageOS
     SPDX-License-Identifier: Apache-2.0
-->
<resources>
    <!-- Whether to handle audio direction changes between major call states -->
    <bool name="config_handleAudioDirectionChangesBetweenCallStateChanges">true</bool>

    <!-- Name of a font family to use as light font. For theming purpose. -->
    <string name="config_lightFontFamily" translatable="false">sans-serif-light</string>

    <!-- Name of a font family to use as regular font. For theming purpose. -->
    <string name="config_regularFontFamily" translatable="false">sans-serif-regular</string>

    <!-- Whether to cleanup fingerprints upon connection to the daemon and when user switches -->
    <bool name="config_cleanupUnusedFingerprints">true</bool>

    <!-- Whether to cancel fingerprint operation if not idle -->
    <bool name="config_fpCancelIfNotIdle">false</bool>

    <!-- Whether to allow process with media UID to access CameraServiceProxy -->
    <bool name="config_allowMediaUidForCameraServiceProxy">false</bool>

    <!-- Whether device supports an alt. ambient display -->
    <bool name="config_alt_ambient_display">false</bool>

    <!-- Device model (Build.MODEL) to spoof for netflix, if not empty -->
    <string name="config_netflixSpoofModel" translatable="false"></string>

    <!-- Build fingerprint from the stock ROM -->
    <string name="config_stockFingerprint" translatable="false"></string>

    <!-- Whether Pixel props is enabled -->
    <bool name="config_enablePixelProps">true</bool>

    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
    </string-array>

    <!-- Global Actions prefs list -->
    <string-array translatable="false" name="custom_config_globalActionsList">
        <item>emergency</item>
        <item>power</item>
        <item>restart</item>
        <item>advanced</item>
        <item>logout</item>
        <item>users</item>
        <item>silent</item>
        <item>screenshot</item>
        <item>airplane</item>
        <item>settings</item>
        <item>lockdown</item>
        <item>devicecontrols</item>
    </string-array>

    <!-- Whether device has dash charging support -->
    <bool name="config_hasDashCharger">false</bool>

    <!-- Whether device has warp charging support -->
    <bool name="config_hasWarpCharger">false</bool>

    <!-- Whether device has VOOC charging support -->
    <bool name="config_hasVoocCharger">false</bool>

    <!-- Whether device has turbo power charging support -->
    <bool name="config_hasTurboPowerCharger">false</bool>

    <!-- Path to fast charging status file to detect whether an oem fast charger is active -->
    <string name="config_oemFastChargerStatusPath" translatable="false"></string>

    <!-- Path to fast charging status file to detect whether an oem fast charger is active -->
    <string name="config_oemFastChargerStatusPath2" translatable="false">/sys/class/power_supply/battery/voocchg_ing</string>

    <!-- Expected value from fast charging status file  -->
    <string name="config_oemFastChargerStatusValue" translatable="false">1</string>


    <!-- Whether the device supports Smart Pixels -->
    <bool name="config_supportSmartPixels">false</bool>

    <!-- The list of package IDs that are allowed to use aux cameras.
         NOTE: If this list is empty then all apps will be able to use aux cameras. -->
    <string-array name="config_cameraAuxPackageAllowList" translatable="false" />

    <!-- The list of package IDs that are not allowed to use aux cameras. -->
    <string-array name="config_cameraAuxPackageExcludeList" translatable="false" />

    <!-- Defines the sysfs attribute path used by pocket bridge
         to communicate pocket state to the pocket judge kernel driver. -->
    <string name="config_pocketBridgeSysfsInpocket"></string>

    <!-- Pocket Lock -->
    <bool name="config_pocketModeSupported">true</bool>
    <bool name="config_pocketUseLightSensor">true</bool>

    <!-- Defines custom OEM sensor for pocket detection. -->
    <string name="config_pocketJudgeVendorSensorName"></string>
    <string name="config_pocketJudgeVendorProximitySensorName"></string>

    <!-- Should we listen for fingerprints when the screen is off?  Devices
         with a rear-mounted sensor want this, but certain devices have
         the sensor embedded in the power key and listening all the time
         causes a poor experience. -->
    <bool name="config_fingerprintWakeAndUnlock">true</bool>

    <!-- Display color inversion availability -->
    <bool name="config_displayInversionAvailable">true</bool>

  <!-- Parallel space max count. Should overlay according to device performance. -->
  <integer name="config_parallelSpaceMaxCount">9</integer>

    <!-- Default values for LiveDisplay -->
    <bool name="config_enableLiveDisplay">true</bool>
    <integer name="config_dayColorTemperature">6500</integer>
    <integer name="config_nightColorTemperature">4800</integer>
    <integer name="config_outdoorAmbientLux">12000</integer>
    <integer name="config_outdoorAmbientLuxHysteresis">1500</integer>
    <integer name="config_defaultLiveDisplayMode">0</integer>

    <!-- These values should map to the true min and max
         that the backend is capable of adjusting to. This
         is more important when using the ColorBalance mode,
         as the discrete adjustment is interpolated between
         this range (with config_dayColorTemperature at zero) -->
    <integer name="config_minColorTemperature">1000</integer>
    <integer name="config_maxColorTemperature">10000</integer>

    <bool name="config_defaultAutoContrast">false</bool>
    <bool name="config_defaultAutoOutdoorMode">true</bool>
    <bool name="config_defaultColorEnhancement">true</bool>
    <bool name="config_defaultCABC">false</bool>
    <bool name="config_defaultAntiFlicker">false</bool>

    <!-- Display mode remapping table.
         If the mode names returned by the backend do not match
         the predefined and translated strings in the Settings
         app, they can be remapped here. The format is
         "oldname:newname", one per entry. -->
    <string-array name="config_displayModeMappings" translatable="false">
    </string-array>

    <!-- Should we filter any display modes which are unmapped? -->
    <bool name="config_filterDisplayModes">false</bool>

    <!-- Whether devices suports in-display fingerprint when screen is off -->
    <bool name="config_supportScreenOffUdfps">false</bool>

  <!-- List of system apps that are allowed to be locked with app lock.
        Use with extreme caution. -->
  <string-array name="config_appLockAllowedSystemApps" translatable="false" />

  <!-- Whether charging control should be enabled by default -->
  <bool name="config_chargingControlEnabled">false</bool>
  <!-- Default charging control mode.
       This integer should be set to:
       1 - auto - Use the alarm to calculate the time range when to activate charging control
       2 - custom - Use time range when the device is usually charging for hours
       3 - limit - Just limit charging -->
  <integer name="config_defaultChargingControlMode">1</integer>
  <!-- Default time when charging control is activated.
       Represented as seconds from midnight (e.g. 79200 == 10pm). -->
  <integer name="config_defaultChargingControlStartTime">79200</integer>
  <!-- Default time when battery will be fully charged.
       Represented as seconds from midnight (e.g. 21600 == 6am). -->
  <integer name="config_defaultChargingControlTargetTime">21600</integer>
  <!-- Default charging limit. -->
  <integer name="config_defaultChargingControlLimit">80</integer>
  <!-- Considering the fact that the system might have an incorrect estimation of the time to
       full. Set a time margin to make the device fully charged before the target time arrives.
       The unit is minutes and the default value is 30 minutes. If you find that it is not enough
       to make the device to be fully charged at the target time, increase the value
  -->
  <integer name="config_chargingControlTimeMargin">30</integer>
  <!-- For a device that cannot bypass battery when charging stops (that is, the battery current
       is 0mA when charging stops), the battery will gradually discharge. So we need to make it
       recharge when the battery level is lower than a threshold. Set this so that the device
       will be charged between (limit - val) and limit. -->
  <integer name="config_chargingControlBatteryRechargeMargin">10</integer>

</resources>
